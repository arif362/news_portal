# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>


development:
  <<: *default
  database: <%= ENV.fetch("NEWS_PORTAL_DEVELOPMENT_DB") { "news_portal_development" } %>
  username: <%= ENV["NEWS_PORTAL_DEVELOPMENT_USER"] %>
  password: <%= ENV["NEWS_PORTAL_DEVELOPMENT_PASSWORD"] %>
  host: <%= ENV.fetch("NEWS_PORTAL_DEVELOPMENT_HOST", "localhost") %>
  port: <%= ENV.fetch("NEWS_PORTAL_DEVELOPMENT_PORT", 5432) %>

test:
  <<: *default
  database: <%= ENV.fetch("NEWS_PORTAL_TEST_DB") { "news_portal_test" } %>
  username: <%= ENV["NEWS_PORTAL_TEST_USER"] %>
  password: <%= ENV["NEWS_PORTAL_TEST_PASSWORD"] %>
  host: <%= ENV.fetch("NEWS_PORTAL_TEST_HOST", "localhost") %>
  port: <%= ENV.fetch("NEWS_PORTAL_TEST_PORT", 5432) %>

production:
  primary: &primary_production
    <<: *default
    database: <%= ENV.fetch("NEWS_PORTAL_PRODUCTION_DB") { "news_portal_production" } %>
    username: <%= ENV["NEWS_PORTAL_PRODUCTION_USER"] %>
    password: <%= ENV["NEWS_PORTAL_PRODUCTION_PASSWORD"] %>
    host: <%= ENV.fetch("NEWS_PORTAL_PRODUCTION_HOST", "localhost") %>
    port: <%= ENV.fetch("NEWS_PORTAL_PRODUCTION_PORT", 5432) %>
  cache:
    <<: *primary_production
    database: <%= ENV.fetch("NEWS_PORTAL_PRODUCTION_CACHE_DB") { "news_portal_production_cache" } %>
    migrations_paths: db/cache_migrate
  queue:
    <<: *primary_production
    database: <%= ENV.fetch("NEWS_PORTAL_PRODUCTION_QUEUE_DB") { "news_portal_production_queue" } %>
    migrations_paths: db/queue_migrate
  cable:
    <<: *primary_production
    database: <%= ENV.fetch("NEWS_PORTAL_PRODUCTION_CABLE_DB") { "news_portal_production_cable" } %>
    migrations_paths: db/cable_migrate
